vector<int> twoSum(vector<int>& nums, int target) {
           int n = nums.size();
            vector<pair<int, int>> indexedNums;

    // Store values along with original indices
    for (int i = 0; i < n; i++) {
        indexedNums.push_back({nums[i], i});
    }

    // Sort based on values while keeping track of original indices
    sort(indexedNums.begin(), indexedNums.end());
           int left = 0;
           int right = n - 1;
           
           while(left < right){
            int sum = indexedNums[left].first + indexedNums[right].first;

        if (sum == target) {
            return {indexedNums[left].second, indexedNums[right].second};  // Return original indices
        }

             else if(sum < target ) left++;
             else right--;
           }
        return {};
    }
